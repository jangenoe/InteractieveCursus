"use strict";(self.webpackChunkjupyterlab_myst=self.webpackChunkjupyterlab_myst||[]).push([[53,550],{48550:(t,e,s)=>{s.r(e),s.d(e,{default:()=>r});var i=s(41423);function n(t,e=[1,2,2,3]){const s=(null!=t?t:"1 2 2 3").split(/\s/).map((t=>Number(t.trim()))).filter((t=>!Number.isNaN(t))).map((t=>Math.min(Math.max(Math.floor(t),1),12)));return 0===s.length||s.length>4?e:s}const r={grid:{myst:class extends i.Directive{constructor(){super(...arguments),this.required_arguments=0,this.optional_arguments=1,this.final_argument_whitespace=!0,this.has_content=!0,this.option_spec={"class-container":i.directiveOptions.class_option,"class-row":i.directiveOptions.class_option,gutter:i.directiveOptions.unchanged,margin:i.directiveOptions.unchanged,padding:i.directiveOptions.unchanged,reverse:i.directiveOptions.unchanged,outline:i.directiveOptions.unchanged}}run(t){var e;const s=[],i=this.createToken("grid_open","div",1,{map:t.map,block:!0,meta:{columns:null!==(e=t.args[0])&&void 0!==e?e:"1 2 2 3"}});s.push(i);const n=this.nestedParse(t.body,t.bodyMap[0]);return s.push(...n),s.push(this.createToken("grid_close","div",-1,{block:!0})),s}},mdast:{type:"grid",getAttrs:t=>({columns:n(t.meta.columns)})},hast:(t,e)=>t(e,"div")}}}}]);