(self.webpackChunkjupyterlab_myst=self.webpackChunkjupyterlab_myst||[]).push([[246],{246:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const r=new RegExp(`^\\\\begin{(${["equation","multline","gather","align","alignat","flalign","matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","eqnarray"].join("|")})([*]?)}`);function a(e,t,n,a){if(e.sCount[t]-e.blkIndent>=4)return!1;const s=e.bMarks[t]+e.tShift[t],l=function(e){const t=e.match(r);if(!t)return null;const[,n,a]=t,s=`\\end{${n}${a}}`,l=e.indexOf(s);return-1===l?null:{environment:n,numbered:a,endpos:l+s.length}}(e.src.slice(s));if(!l)return!1;const{environment:i,numbered:o}=l;let{endpos:c}=l;c+=s;let u=t;for(;u<n;){if(c>=e.bMarks[u]&&c<=e.eMarks[u]){e.line=u+1;break}u+=1}if(!a){const n=e.push("amsmath","math",0);n.block=!0,n.content=e.src.slice(s,c),n.meta={environment:i,numbered:o},n.map=[t,u]}return!0}const s=function(e,t){e.block.ruler.before("blockquote","amsmath",a,{alt:["paragraph","reference","blockquote","list","footnote_def"]});const n=null==t?void 0:t.renderer;e.renderer.rules.amsmath=n?(t,r)=>{const a=t[r].content;let s;try{s=n(a)}catch(t){s=e.utils.escapeHtml(`${a}:${t.message}`)}return s}:(t,n)=>`<div class="math amsmath">\n${e.utils.escapeHtml(t[n].content)}\n</div>\n`}}}]);