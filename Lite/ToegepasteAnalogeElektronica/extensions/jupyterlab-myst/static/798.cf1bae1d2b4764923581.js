(self.webpackChunkjupyterlab_myst=self.webpackChunkjupyterlab_myst||[]).push([[798],{798:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});var i=e(80);const a="executablebooks/jupyterlab-markup",o=[(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-front-matter",title:"Front Matter",description:"Plugin for processing front matter for markdown-it markdown parser",documentationUrls:{Plugin:"https://github.com/ParkSB/markdown-it-front-matter"},examples:{"Example ":"---\nvalid-front-matter: true\n---"},plugin:async()=>{const t=await e.e(588).then(e.t.bind(e,201,23));function n(t){}return[function(e,i){t.default(e,n)}]}}),(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-docutils",title:"Docutils",description:"Plugin for implementing docutils style roles (inline extension point) and directives (block extension point)",documentationUrls:{Plugin:"https://github.com/executablebooks/markdown-it-docutils"},examples:{"Example ":"```{name} argument\n:option: value\n\ncontent\n```"},plugin:async()=>[(await e.e(432).then(e.t.bind(e,92,23))).default]}),(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-amsmath",title:"amsmath",description:"Plugin for amsmath LaTeX environments",documentationUrls:{Plugin:"https://github.com/executablebooks/markdown-it-amsmath"},examples:{"Example ":"\\begin{equation}\na = 1\n\\end{equation}"},plugin:async()=>[(await e.e(771).then(e.t.bind(e,862,23))).default]}),(0,i.simpleMarkdownItPlugin)(a,{id:"markdown-it-myst-extras",title:"MyST Extras",description:"Additional markdown-it plugins required for the MyST specification",documentationUrls:{Plugin:"https://github.com/executablebooks/markdown-it-myst-extras"},examples:{Blockquotes:"% comment","Block Breaks":"+++","MyST Targets":"(name)=","Colon Fence":":::name\ncontained text\n :::"},plugin:async()=>{const t=await e.e(866).then(e.t.bind(e,760,23));return[function(n,e){t.mystBlockPlugin(n),t.colonFencePlugin(n)}]}})]}}]);